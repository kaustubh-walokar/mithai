/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package edu.sjsu.mithai.data;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroGraphMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 800324582428011975L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroGraphMetadata\",\"namespace\":\"edu.sjsu.mithai.data\",\"fields\":[{\"name\":\"deviceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"connectedDevices\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"name\":\"localGraph\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AvroGraphMetadata\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String deviceId;
  @Deprecated public java.util.List<java.lang.String> connectedDevices;
  @Deprecated public java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> localGraph;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroGraphMetadata() {}

  /**
   * All-args constructor.
   * @param deviceId The new value for deviceId
   * @param connectedDevices The new value for connectedDevices
   * @param localGraph The new value for localGraph
   */
  public AvroGraphMetadata(java.lang.String deviceId, java.util.List<java.lang.String> connectedDevices, java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> localGraph) {
    this.deviceId = deviceId;
    this.connectedDevices = connectedDevices;
    this.localGraph = localGraph;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deviceId;
    case 1: return connectedDevices;
    case 2: return localGraph;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deviceId = (java.lang.String)value$; break;
    case 1: connectedDevices = (java.util.List<java.lang.String>)value$; break;
    case 2: localGraph = (java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return The value of the 'deviceId' field.
   */
  public java.lang.String getDeviceId() {
    return deviceId;
  }

  /**
   * Sets the value of the 'deviceId' field.
   * @param value the value to set.
   */
  public void setDeviceId(java.lang.String value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'connectedDevices' field.
   * @return The value of the 'connectedDevices' field.
   */
  public java.util.List<java.lang.String> getConnectedDevices() {
    return connectedDevices;
  }

  /**
   * Sets the value of the 'connectedDevices' field.
   * @param value the value to set.
   */
  public void setConnectedDevices(java.util.List<java.lang.String> value) {
    this.connectedDevices = value;
  }

  /**
   * Gets the value of the 'localGraph' field.
   * @return The value of the 'localGraph' field.
   */
  public java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> getLocalGraph() {
    return localGraph;
  }

  /**
   * Sets the value of the 'localGraph' field.
   * @param value the value to set.
   */
  public void setLocalGraph(java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> value) {
    this.localGraph = value;
  }

  /**
   * Creates a new AvroGraphMetadata RecordBuilder.
   * @return A new AvroGraphMetadata RecordBuilder
   */
  public static edu.sjsu.mithai.data.AvroGraphMetadata.Builder newBuilder() {
    return new edu.sjsu.mithai.data.AvroGraphMetadata.Builder();
  }

  /**
   * Creates a new AvroGraphMetadata RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroGraphMetadata RecordBuilder
   */
  public static edu.sjsu.mithai.data.AvroGraphMetadata.Builder newBuilder(edu.sjsu.mithai.data.AvroGraphMetadata.Builder other) {
    return new edu.sjsu.mithai.data.AvroGraphMetadata.Builder(other);
  }

  /**
   * Creates a new AvroGraphMetadata RecordBuilder by copying an existing AvroGraphMetadata instance.
   * @param other The existing instance to copy.
   * @return A new AvroGraphMetadata RecordBuilder
   */
  public static edu.sjsu.mithai.data.AvroGraphMetadata.Builder newBuilder(edu.sjsu.mithai.data.AvroGraphMetadata other) {
    return new edu.sjsu.mithai.data.AvroGraphMetadata.Builder(other);
  }

  /**
   * RecordBuilder for AvroGraphMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroGraphMetadata>
    implements org.apache.avro.data.RecordBuilder<AvroGraphMetadata> {

    private java.lang.String deviceId;
    private java.util.List<java.lang.String> connectedDevices;
    private java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> localGraph;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(edu.sjsu.mithai.data.AvroGraphMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connectedDevices)) {
        this.connectedDevices = data().deepCopy(fields()[1].schema(), other.connectedDevices);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.localGraph)) {
        this.localGraph = data().deepCopy(fields()[2].schema(), other.localGraph);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroGraphMetadata instance
     * @param other The existing instance to copy.
     */
    private Builder(edu.sjsu.mithai.data.AvroGraphMetadata other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connectedDevices)) {
        this.connectedDevices = data().deepCopy(fields()[1].schema(), other.connectedDevices);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.localGraph)) {
        this.localGraph = data().deepCopy(fields()[2].schema(), other.localGraph);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'deviceId' field.
      * @return The value.
      */
    public java.lang.String getDeviceId() {
      return deviceId;
    }

    /**
      * Sets the value of the 'deviceId' field.
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder setDeviceId(java.lang.String value) {
      validate(fields()[0], value);
      this.deviceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder clearDeviceId() {
      deviceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectedDevices' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getConnectedDevices() {
      return connectedDevices;
    }

    /**
      * Sets the value of the 'connectedDevices' field.
      * @param value The value of 'connectedDevices'.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder setConnectedDevices(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.connectedDevices = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'connectedDevices' field has been set.
      * @return True if the 'connectedDevices' field has been set, false otherwise.
      */
    public boolean hasConnectedDevices() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'connectedDevices' field.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder clearConnectedDevices() {
      connectedDevices = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'localGraph' field.
      * @return The value.
      */
    public java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> getLocalGraph() {
      return localGraph;
    }

    /**
      * Sets the value of the 'localGraph' field.
      * @param value The value of 'localGraph'.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder setLocalGraph(java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata> value) {
      validate(fields()[2], value);
      this.localGraph = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'localGraph' field has been set.
      * @return True if the 'localGraph' field has been set, false otherwise.
      */
    public boolean hasLocalGraph() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'localGraph' field.
      * @return This builder.
      */
    public edu.sjsu.mithai.data.AvroGraphMetadata.Builder clearLocalGraph() {
      localGraph = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AvroGraphMetadata build() {
      try {
        AvroGraphMetadata record = new AvroGraphMetadata();
        record.deviceId = fieldSetFlags()[0] ? this.deviceId : (java.lang.String) defaultValue(fields()[0]);
        record.connectedDevices = fieldSetFlags()[1] ? this.connectedDevices : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.localGraph = fieldSetFlags()[2] ? this.localGraph : (java.util.List<edu.sjsu.mithai.data.AvroGraphMetadata>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
